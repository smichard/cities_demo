apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cities-demo
spec:
  workspaces:
  - name: shared-workspace
  - name: registry-credentials
  params:
  - name: git-url
    type: string
    description: "Url of the git repo for the code of deployment"
    default: https://github.com/smichard/cities_demo
  - name: image
    type: string
    description: "Image to be build from the code and push to internal registry"
    default: image-registry.openshift-image-registry.svc:5000/demo/cities-pipeline-demo
  - name: image-external
    type: string
    description: "Fully qualified destination container image name, including tag."
    default: quay.io/michard/cities_tekton
  tasks:
  - name: fetch-repository
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: git-clone
      - name: namespace
        value: openshift-pipelines
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: URL
      value: $(params.git-url)
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: main
  - name: build-image
    retries: 3
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: buildah
      - name: namespace
        value: openshift-pipelines
    params:
    - name: IMAGE
      value: $(params.image)
    - name: DOCKERFILE
      value: "./Containerfile"
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: get-git-tag
    taskRef:
      name: get-git-tag
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
  - name: build-image-external
    retries: 3
    taskRef:
      resolver: cluster
      params:
      - name: kind
        value: task
      - name: name
        value: buildah
      - name: namespace
        value: openshift-pipelines
    params:
    - name: IMAGE
      value: $(params.image-external):$(tasks.get-git-tag.results.build-tag)
    - name: DOCKERFILE
      value: "./Containerfile"
    workspaces:
    - name: source
      workspace: shared-workspace
    - name: dockerconfig
      workspace: registry-credentials
    runAfter:
    - get-git-tag